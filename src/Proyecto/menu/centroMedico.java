/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Proyecto.menu;

import Proyecto.BD.conexion;
import Proyecto.objetos.CentromedicoBL;
import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vicen
 */
public class centroMedico extends javax.swing.JFrame {
    DefaultTableModel modelo;
    /**
     * Creates new form centroMedico
     */
    public centroMedico() {
        initComponents();

        String[] titulos= {"IDCentroMedico","Nombre","Tipo","Region","Ciudad"};
        modelo= new DefaultTableModel(null,titulos);
        tblCentroMedico.setModel(modelo);
     
        this.mostrarDatos();
        this.limpiar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCentroMedico = new javax.swing.JTable();
        btnEliminar1 = new javax.swing.JButton();
        btnCancelar1 = new javax.swing.JButton();
        btnEditar1 = new javax.swing.JButton();
        btnAgregar1 = new javax.swing.JButton();
        nombre_centroMedico = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ciudad_centroMedico = new javax.swing.JTextField();
        ID_centroMedico = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tipo_centroMedico = new javax.swing.JComboBox<>();
        region_centroMedico = new javax.swing.JComboBox<>();

        btnEliminar.setText("Eliminar");

        btnCancelar.setText("Cancelar");

        btnEditar.setText("Editar");

        btnAgregar.setText("Añadir");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel10.setText("Añadir Centro Medico");

        jButton5.setText("<");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        tblCentroMedico.setAutoCreateRowSorter(true);
        tblCentroMedico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCentroMedico.getTableHeader().setReorderingAllowed(false);
        tblCentroMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCentroMedicoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblCentroMedico);

        btnEliminar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Proyecto/recursos/cerrar.png"))); // NOI18N
        btnEliminar1.setText("Eliminar");
        btnEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar1ActionPerformed(evt);
            }
        });

        btnCancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Proyecto/recursos/refresh.png"))); // NOI18N
        btnCancelar1.setText("Cancelar");
        btnCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelar1ActionPerformed(evt);
            }
        });

        btnEditar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Proyecto/recursos/editar.png"))); // NOI18N
        btnEditar1.setText("Editar");
        btnEditar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditar1ActionPerformed(evt);
            }
        });

        btnAgregar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Proyecto/recursos/check.png"))); // NOI18N
        btnAgregar1.setText("Añadir");
        btnAgregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregar1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre del centro:");

        jLabel2.setText("Tipo de centro medico:");

        jLabel3.setText("Region:");

        jLabel4.setText("Ciudad:");

        ID_centroMedico.setEditable(false);
        ID_centroMedico.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        jLabel5.setText("ID:");

        tipo_centroMedico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hospital", "Clinica", "Cesfam", " " }));

        region_centroMedico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII", "Metropolitana", "XIV", "XV", "XVI" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nombre_centroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tipo_centroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(region_centroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(126, 126, 126)
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(ciudad_centroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 365, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ID_centroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(btnAgregar1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnEditar1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnEliminar1)
                        .addGap(27, 27, 27)
                        .addComponent(btnCancelar1)
                        .addGap(89, 89, 89))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nombre_centroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tipo_centroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(ciudad_centroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(region_centroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregar1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditar1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ID_centroMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(0, 29, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        menu abrir = new menu();
        abrir.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnAgregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregar1ActionPerformed
        // TODO add your handling code here:
        if (nombre_centroMedico.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "No ingresaste el nombre del centro medico", "Error", JOptionPane.WARNING_MESSAGE);
            nombre_centroMedico.requestFocus();
        }
        else if (ciudad_centroMedico.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "No ingresaste la ciudad del centro medico", "Error", JOptionPane.WARNING_MESSAGE);
            ciudad_centroMedico.requestFocus();
        }
        else{
            conexion objConexion1= new conexion();

            CentromedicoBL centroMedico= recuperarDatosGUI();

            String strSentenciaInsert= String.format("INSERT INTO CentrosMedicos (IDCentroMedico,Nombre,Tipo,Region,Ciudad) " 
                        + "VALUES (NULL,'%s','%s','%s','%s')",centroMedico.getNombre(),centroMedico.getTipo(),centroMedico.getRegion(),centroMedico.getCiudad());

            objConexion1.ejecutarSentenciaSQL(strSentenciaInsert);
        
            this.mostrarDatos();
            this.limpiar();
        }
    }//GEN-LAST:event_btnAgregar1ActionPerformed

    private void btnCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelar1ActionPerformed
        // TODO add your handling code here:
        this.limpiar();
    }//GEN-LAST:event_btnCancelar1ActionPerformed

    private void btnEditar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditar1ActionPerformed
        // TODO add your handling code here:
        if (nombre_centroMedico.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "No ingresaste el nombre del centro medico", "Error", JOptionPane.WARNING_MESSAGE);
            nombre_centroMedico.requestFocus();
        }
        else if (ciudad_centroMedico.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "No ingresaste la ciudad del centro medico", "Error", JOptionPane.WARNING_MESSAGE);
            ciudad_centroMedico.requestFocus();
        }
        else{
            conexion objConexion1= new conexion();

            CentromedicoBL centroMedico= recuperarDatosGUI();

            String strSentenciaInsert= String.format("UPDATE CentrosMedicos SET Nombre= '%s', Tipo= '%s',Region= '%s',Ciudad= '%s' WHERE IDCentroMedico='%d' ",centroMedico.getNombre(),centroMedico.getTipo(),centroMedico.getRegion(),centroMedico.getCiudad(),centroMedico.getIDCentroMedico());

            objConexion1.ejecutarSentenciaSQL(strSentenciaInsert);

            this.mostrarDatos();
            this.limpiar();
        }
    }//GEN-LAST:event_btnEditar1ActionPerformed

    private void btnEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar1ActionPerformed
        // TODO add your handling code here:
        conexion objConexion1= new conexion();

        CentromedicoBL centroMedico= recuperarDatosGUI();

        String strSentenciaInsert= String.format("DELETE FROM CentrosMedicos WHERE IDCentroMedico=%d",centroMedico.getIDCentroMedico());

        objConexion1.ejecutarSentenciaSQL(strSentenciaInsert);

        this.mostrarDatos();
        this.limpiar();
    }//GEN-LAST:event_btnEliminar1ActionPerformed

    private void tblCentroMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCentroMedicoMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==1){
            JTable receptor= (JTable)evt.getSource();
            
            ID_centroMedico.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),0).toString());
            nombre_centroMedico.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),1).toString());
            tipo_centroMedico.setSelectedItem(receptor.getModel().getValueAt(receptor.getSelectedRow(),2).toString());
            region_centroMedico.setSelectedItem(receptor.getModel().getValueAt(receptor.getSelectedRow(),3).toString());
            ciudad_centroMedico.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(),4).toString());    
        }
        btnAgregar1.setEnabled(false);
        btnEditar1.setEnabled(true);
        btnEliminar1.setEnabled(true); 
    }//GEN-LAST:event_tblCentroMedicoMouseClicked

    public void mostrarDatos(){
        while (modelo.getRowCount()>0) {            
            modelo.removeRow(0);
        }

        conexion objConexion1= new conexion();

        try {
            ResultSet resultado= objConexion1.consultarRegistros("SELECT * FROM CentrosMedicos");
            while (resultado.next()) {

                Object[] oUsuario= {resultado.getString("IDCentroMedico"),resultado.getString("Nombre"),resultado.getString("Tipo"),resultado.getString("Region"),resultado.getString("Ciudad")};
                
                modelo.addRow(oUsuario);
                }
        } catch (Exception e) {
            System.out.println(e);
        }       

    }

    public CentromedicoBL recuperarDatosGUI(){
        CentromedicoBL centroMedico= new CentromedicoBL();
  
        int IDCentro= (ID_centroMedico.getText().isEmpty())?0: Integer.parseInt(ID_centroMedico.getText());
        
        centroMedico.setIDCentroMedico(IDCentro);
        centroMedico.setNombre(nombre_centroMedico.getText());
        centroMedico.setTipo((String) tipo_centroMedico.getSelectedItem());
        centroMedico.setRegion((String) region_centroMedico.getSelectedItem());
        centroMedico.setCiudad(ciudad_centroMedico.getText());

        return centroMedico;
        
    }

    public void limpiar() {
        ID_centroMedico.setText("");
        nombre_centroMedico.setText("");
        tipo_centroMedico.setSelectedItem("Hospital");
        region_centroMedico.setSelectedItem("I");
        ciudad_centroMedico.setText("");
        
        btnAgregar1.setEnabled(true);
        btnEditar1.setEnabled(false);
        btnEliminar1.setEnabled(false);


    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(centroMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(centroMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(centroMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(centroMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new centroMedico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ID_centroMedico;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregar1;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCancelar1;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditar1;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminar1;
    private javax.swing.JTextField ciudad_centroMedico;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField nombre_centroMedico;
    private javax.swing.JComboBox<String> region_centroMedico;
    private javax.swing.JTable tblCentroMedico;
    private javax.swing.JComboBox<String> tipo_centroMedico;
    // End of variables declaration//GEN-END:variables
}
